- name: Download step packages
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  with_items:
    - { url: "https://github.com/smallstep/cli/releases/download/v0.16.0/step-cli_0.16.0_amd64.deb", dest: "/tmp/step-cli_0.16.0_amd64.deb" }
    - { url: "https://github.com/smallstep/certificates/releases/download/v0.16.0/step-ca_0.16.0_amd64.deb", dest: "/tmp/step-ca_0.16.0_amd64.deb" }

- name: Install packages
  apt:
    deb: "{{ item }}"
  with_items:
    - /tmp/step-cli_0.16.0_amd64.deb
    - /tmp/step-ca_0.16.0_amd64.deb

- name: Create step-ca directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ step_ca_path }}"

- name: Generate password file
  shell:
    cmd: "echo $(openssl rand -hex 12) > {{ step_ca_path }}/password.txt"
    creates: "{{ step_ca_path }}/password.txt"

- name: Initialize step certificate authority
  shell:
    cmd: |
      step ca init --name trellis-local-ca --dns 127.0.0.1 --address :8443 --provisioner admin --password-file {{ step_ca_path }}/password.txt --provisioner-password-file {{ step_ca_path }}/password.txt
      step ca provisioner add acme --type ACME
    creates: "{{ step_ca_path }}/certs/root_ca.crt"
  environment:
    STEPPATH: "{{ step_ca_path }}"

- name: Install local root certificate
  command:
    cmd: step certificate install {{ step_ca_path }}/certs/root_ca.crt
  environment:
    STEPPATH: "{{ step_ca_path }}"

- name: Copy systemd unit
  template:
    src: step-ca.service.j2
    dest: /etc/systemd/system/step-ca.service

- name: Enable step-ca service
  service:
    name: step-ca
    enabled: yes
    state: started
    use: service

- name: Get root cert fingerprint
  shell: step certificate fingerprint {{ step_ca_path }}/certs/root_ca.crt
  register: fingerprint
  changed_when: false

- name: Print fingerprint
  debug:
    var: fingerprint.stdout
